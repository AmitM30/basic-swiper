{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///swiper.min.js","webpack:///webpack/bootstrap 9e319e4c6243d09b933f","webpack:///./src/swiper.js","webpack:///./src/utils/detect-prefixes.js","webpack:///./src/utils/dispatch-event.js","webpack:///./src/utils/custom-events.js","webpack:///./src/utils/init-pagination.js","webpack:///./src/utils/init-autoplay.js","webpack:///./src/defaults.js"],"names":["root","factory","exports","module","define","amd","a","i","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_extends","Object","assign","target","arguments","length","source","key","prototype","hasOwnProperty","_detectPrefixes","_detectPrefixes2","_dispatchEvent","_dispatchEvent2","_initPagination","_initPagination2","_initAutoplay","_initAutoplay2","_defaults","_defaults2","slice","Array","window","swiper","slider","opts","setActiveElement","slides","currentIndex","_options","options","classNameActiveSlide","forEach","element","index","classList","contains","remove","add","prevCtrl","classNameDisabled","nextCtrl","rewind","setupSlidesPerView","slideArray","_options2","slidesPerView","classNameSlide","style","width","slideContainer","addEventListener","prefixes","transitionEnd","onTransitionEnd","children","dispatchSliderEvent","phase","type","detail","translate","to","duration","ease","transition","hasTranslate3d","transform","count","eventInterval","setInterval","clearInterval","slide","nextIndex","direction","_options3","slideSpeed","slidesToScroll","infinite","rewindSpeed","nextSlide","maxOffset","Math","round","slidesWidth","frameWidth","min","max","undefined","nextOffset","offsetLeft","abs","position","x","transitionEndCallback","currentSlide","setup","_options4","classNameFrame","classNameSlideContainer","classNameDotsContainer","classNamePrevCtrl","classNameNextCtrl","enableMouseEvents","frame","getElementsByClassName","dotsContainer","document","body","slideTo","y","offsetTop","stopAutoplay","startAutoplay","reset","prev","next","onTouchstart","passive","onClick","onResize","destroy","_options5","rewindOnResize","getBoundingClientRect","offsetWidth","reduce","previousValue","returnIndex","removeEventListener","onTouchmove","onTouchend","self","onAutoplayStart","apply","removeChild","firstChild","lastChild","event","_options6","touches","pageX","pageY","touchOffset","time","Date","now","isScrolling","delta","preventDefault","isValid","Number","isOutOfBounds","snapBackSpeed","autoplay","jQuery","global","detectPrefixes","el","createElement","prop","insertBefore","getComputedStyle","getPropertyValue","defineProperty","value","dispatchEvent","_customEvents2","bubbles","cancelable","_customEvents","useNative","CustomEvent","foo","e","createEvent","params","initCustomEvent","createEventObject","Boolean","initPagination","handleDotEvent","len","dotCount","clone","dotListItem","cloneNode","dotContainer","appendChild","childNodes","indexOf","querySelectorAll","querySelector","className","initAutoplay","autoplayTime"],"mappings":"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","file":"swiper.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _detectPrefixes = __webpack_require__(2);\n\t\n\tvar _detectPrefixes2 = _interopRequireDefault(_detectPrefixes);\n\t\n\tvar _dispatchEvent = __webpack_require__(3);\n\t\n\tvar _dispatchEvent2 = _interopRequireDefault(_dispatchEvent);\n\t\n\tvar _initPagination = __webpack_require__(5);\n\t\n\tvar _initPagination2 = _interopRequireDefault(_initPagination);\n\t\n\tvar _initAutoplay = __webpack_require__(6);\n\t\n\tvar _initAutoplay2 = _interopRequireDefault(_initAutoplay);\n\t\n\tvar _defaults = __webpack_require__(7);\n\t\n\tvar _defaults2 = _interopRequireDefault(_defaults);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar slice = Array.prototype.slice;\n\t\n\t// 'use strict';\n\t(function (window) {\n\t    var swiper = function swiper(slider, opts) {\n\t        var self = this;\n\t\n\t        var position = void 0;\n\t        var slidesWidth = void 0;\n\t        var frameWidth = void 0;\n\t        var slides = void 0;\n\t\n\t        /**\n\t         * slider DOM elements\n\t         */\n\t        var frame = void 0;\n\t        var slideContainer = void 0;\n\t        var prevCtrl = void 0;\n\t        var nextCtrl = void 0;\n\t        var prefixes = void 0;\n\t        var transitionEndCallback = void 0;\n\t        var dotsContainer = void 0;\n\t\n\t        var index = 0;\n\t        var options = {};\n\t\n\t        self.onAutoplayStart;\n\t\n\t        /**\n\t         * if object is jQuery convert to native DOM element\n\t         */\n\t        if (typeof jQuery !== 'undefined' && slider instanceof jQuery) {\n\t            slider = slider[0];\n\t        }\n\t\n\t        /**\n\t         * private\n\t         * set active class to element which is the current slide\n\t         */\n\t        function setActiveElement(slides, currentIndex) {\n\t            var _options = options,\n\t                classNameActiveSlide = _options.classNameActiveSlide;\n\t\n\t\n\t            slides.forEach(function (element, index) {\n\t                if (element.classList.contains(classNameActiveSlide)) {\n\t                    element.classList.remove(classNameActiveSlide);\n\t                }\n\t            });\n\t\n\t            if (slides[currentIndex]) {\n\t                slides[currentIndex].classList.add(classNameActiveSlide);\n\t            }\n\t\n\t            if (prevCtrl) {\n\t                currentIndex === 0 ? prevCtrl.classList.add(options.classNameDisabled) : prevCtrl.classList.remove(options.classNameDisabled);\n\t            }\n\t\n\t            if (nextCtrl && !options.rewind) {\n\t                currentIndex + 1 === slides.length ? nextCtrl.classList.add(options.classNameDisabled) : nextCtrl.classList.remove(options.classNameDisabled);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * private\n\t         * setupSlidesPerView: function to setup no. of slides per view\n\t         *\n\t         * @param  {array} slideArray\n\t         * @return {array} array of updated slideContainer elements\n\t         */\n\t        function setupSlidesPerView(slideArray) {\n\t            var _options2 = options,\n\t                slidesPerView = _options2.slidesPerView,\n\t                classNameSlide = _options2.classNameSlide;\n\t\n\t\n\t            slideArray.forEach(function (element) {\n\t                element.style.width = 100 / slidesPerView + '%';\n\t            });\n\t\n\t            slideContainer.addEventListener(prefixes.transitionEnd, onTransitionEnd);\n\t\n\t            return slice.call(slideContainer.children);\n\t        }\n\t\n\t        // /**\n\t        //  * private\n\t        //  * setupInfinite: function to setup if infinite is set\n\t        //  *\n\t        //  * @param  {array} slideArray\n\t        //  * @return {array} array of updated slideContainer elements\n\t        //  */\n\t        // function setupInfinite (slideArray) {\n\t        //     const { infinite } = options;\n\t        //     console.log('setupInfinite: ', slideArray);\n\t        //     console.log('infinite: ', infinite);\n\t\n\t        //     const front = slideArray.slice(0, infinite);\n\t        //     const back  = slideArray.slice(slideArray.length - infinite, slideArray.length);\n\t\n\t        //     front.forEach(function (element) {\n\t        //         const cloned = element.cloneNode(true);\n\t\n\t        //         slideContainer.appendChild(cloned);\n\t        //     });\n\t\n\t        //     back.reverse()\n\t        //         .forEach(function (element) {\n\t        //             const cloned = element.cloneNode(true);\n\t\n\t        //             slideContainer.insertBefore(cloned, slideContainer.firstChild);\n\t        //         });\n\t\n\t        //     slideContainer.addEventListener(prefixes.transitionEnd, onTransitionEnd);\n\t\n\t        //     return slice.call(slideContainer.children);\n\t        // }\n\t\n\t        /**\n\t         * [dispatchSliderEvent description]\n\t         * @return {[type]} [description]\n\t         */\n\t        function dispatchSliderEvent(phase, type, detail) {\n\t            (0, _dispatchEvent2.default)(slider, phase + '.swiper.' + type, detail);\n\t        }\n\t\n\t        /**\n\t         * translates to a given position in a given time in milliseconds\n\t         *\n\t         * @to        {number} number in pixels where to translate to\n\t         * @duration  {number} time in milliseconds for the transistion\n\t         * @ease      {string} easing css property\n\t         */\n\t        function translate(to, duration, ease) {\n\t            var style = slideContainer && slideContainer.style;\n\t\n\t            if (style) {\n\t                style[prefixes.transition + 'TimingFunction'] = ease;\n\t                style[prefixes.transition + 'Duration'] = duration + 'ms';\n\t\n\t                if (prefixes.hasTranslate3d) {\n\t                    style[prefixes.transform] = 'translate3d(' + to + 'px, 0, 0)';\n\t                } else {\n\t                    style[prefixes.transform] = 'translate(' + to + 'px, 0)';\n\t                }\n\t            }\n\t\n\t            // Fire events while sliding\n\t            var count = 5;\n\t            var eventInterval = window.setInterval(function () {\n\t                dispatchSliderEvent('while', 'sliding');\n\t                count--;\n\t                if (count === 0) {\n\t                    window.clearInterval(eventInterval);\n\t                }\n\t            }, duration / 5);\n\t        }\n\t\n\t        /**\n\t         * slidefunction called by prev, next & touchend\n\t         *\n\t         * determine nextIndex and slide to next postion\n\t         * under restrictions of the defined options\n\t         *\n\t         * @direction  {boolean}\n\t         */\n\t        function slide(nextIndex, direction) {\n\t            var _options3 = options,\n\t                slideSpeed = _options3.slideSpeed,\n\t                slidesToScroll = _options3.slidesToScroll,\n\t                infinite = _options3.infinite,\n\t                rewind = _options3.rewind,\n\t                rewindSpeed = _options3.rewindSpeed,\n\t                ease = _options3.ease,\n\t                classNameActiveSlide = _options3.classNameActiveSlide;\n\t\n\t\n\t            var duration = slideSpeed;\n\t\n\t            slider.style.direction = slider.style.direction || options.direction;\n\t\n\t            var nextSlide = direction ? index + 1 : index - 1;\n\t            var maxOffset = Math.round(slidesWidth - frameWidth);\n\t\n\t            dispatchSliderEvent('before', 'slide', {\n\t                index: index,\n\t                nextSlide: nextSlide\n\t            });\n\t\n\t            if (typeof nextIndex !== 'number') {\n\t                if (direction) {\n\t                    nextIndex = index + slidesToScroll;\n\t                } else {\n\t                    nextIndex = index - slidesToScroll;\n\t                }\n\t            }\n\t\n\t            nextIndex = Math.min(Math.max(nextIndex, 0), slides.length - 1);\n\t\n\t            if (infinite && direction === undefined) {\n\t                nextIndex += infinite;\n\t            }\n\t\n\t            // let nextOffset = Math.min(Math.max(slides[nextIndex].offsetLeft * -1, maxOffset * -1), 0);\n\t            var nextOffset = Math.min(Math.max(slides[nextIndex].offsetLeft * (options.direction === 'ltr' ? -1 : 1), maxOffset * -1), 0);\n\t            nextOffset = nextOffset * (options.direction === 'ltr' ? 1 : -1);\n\t\n\t            if (rewind && Math.abs(position.x) === maxOffset && direction) {\n\t                nextOffset = 0;\n\t                nextIndex = 0;\n\t                duration = rewindSpeed;\n\t            }\n\t\n\t            /**\n\t             * translate to the nextOffset by a defined duration and ease function\n\t             */\n\t            translate(nextOffset, duration, ease);\n\t\n\t            /**\n\t             * update the position with the next position\n\t             */\n\t            position.x = nextOffset;\n\t\n\t            /**\n\t             * update the index with the nextIndex only if\n\t             * the offset of the nextIndex is in the range of the maxOffset\n\t             */\n\t            if (slides[nextIndex].offsetLeft <= maxOffset) {\n\t                index = nextIndex;\n\t            }\n\t\n\t            if (infinite && (nextIndex === slides.length - infinite || nextIndex === 0)) {\n\t                if (direction) {\n\t                    index = infinite;\n\t                }\n\t\n\t                if (!direction) {\n\t                    index = slides.length - infinite * 2;\n\t                }\n\t\n\t                position.x = slides[index].offsetLeft * -1;\n\t\n\t                transitionEndCallback = function transitionEndCallback() {\n\t                    translate(slides[index].offsetLeft * -1, 0, undefined);\n\t                };\n\t            }\n\t\n\t            if (classNameActiveSlide) {\n\t                setActiveElement(slice.call(slides), index);\n\t            }\n\t\n\t            dispatchSliderEvent('after', 'slide', {\n\t                currentSlide: index\n\t            });\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * setup function\n\t         */\n\t        function setup() {\n\t            dispatchSliderEvent('before', 'init');\n\t\n\t            prefixes = (0, _detectPrefixes2.default)();\n\t            options = _extends({}, _defaults2.default, opts);\n\t\n\t            var _options4 = options,\n\t                classNameFrame = _options4.classNameFrame,\n\t                classNameSlideContainer = _options4.classNameSlideContainer,\n\t                classNameDotsContainer = _options4.classNameDotsContainer,\n\t                classNamePrevCtrl = _options4.classNamePrevCtrl,\n\t                classNameNextCtrl = _options4.classNameNextCtrl,\n\t                enableMouseEvents = _options4.enableMouseEvents,\n\t                classNameActiveSlide = _options4.classNameActiveSlide;\n\t\n\t\n\t            frame = slider.getElementsByClassName(classNameFrame)[0];\n\t            slideContainer = frame.getElementsByClassName(classNameSlideContainer)[0];\n\t            prevCtrl = slider.getElementsByClassName(classNamePrevCtrl)[0];\n\t            nextCtrl = slider.getElementsByClassName(classNameNextCtrl)[0];\n\t            dotsContainer = slider.getElementsByClassName(classNameDotsContainer)[0];\n\t\n\t            // set swiper direction\n\t            options.direction = document.body.style.direction || options.direction;\n\t\n\t            // set pagination\n\t            if (dotsContainer) {\n\t                (0, _initPagination2.default)(slider, slideTo, options);\n\t            }\n\t\n\t            position = {\n\t                x: slideContainer.offsetLeft,\n\t                y: slideContainer.offsetTop\n\t            };\n\t\n\t            if (options.slidesPerView) {\n\t                slides = setupSlidesPerView(slice.call(slideContainer.getElementsByClassName(_defaults2.default.classNameSlide)));\n\t            } else {\n\t                slides = slice.call(slideContainer.getElementsByClassName(_defaults2.default.classNameSlide));\n\t            }\n\t\n\t            slides.forEach(function (slide) {\n\t                slide.addEventListener('mouseenter', function () {\n\t                    stopAutoplay();\n\t                });\n\t                slide.addEventListener('mouseleave', function () {\n\t                    startAutoplay();\n\t                });\n\t            });\n\t\n\t            // if (options.infinite) {\n\t            //     slides = setupInfinite(slice.call(slideContainer.getElementsByClassName(defaults.classNameSlide)));\n\t            // } else {\n\t            //     slides = slice.call(slideContainer.getElementsByClassName(defaults.classNameSlide));\n\t            // }\n\t\n\t            reset();\n\t\n\t            if (classNameActiveSlide) {\n\t                setActiveElement(slides, index);\n\t            }\n\t\n\t            // start autoplay\n\t            startAutoplay();\n\t\n\t            // set prev and next controls\n\t            if (prevCtrl && nextCtrl) {\n\t                prevCtrl.addEventListener('click', prev);\n\t                nextCtrl.addEventListener('click', next);\n\t            }\n\t\n\t            frame.addEventListener('touchstart', onTouchstart, { passive: true });\n\t\n\t            if (enableMouseEvents) {\n\t                frame.addEventListener('mousedown', onTouchstart);\n\t                frame.addEventListener('click', onClick);\n\t            }\n\t\n\t            options.window.addEventListener('resize', onResize);\n\t\n\t            // check if swiper instance is not present, destroy\n\t            slider.addEventListener('before.swiper.slide', function () {\n\t                if (!document.body.contains(slider)) {\n\t                    destroy();\n\t                }\n\t            });\n\t\n\t            dispatchSliderEvent('after', 'init');\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * reset function: called on resize\n\t         */\n\t        function reset() {\n\t            var _options5 = options,\n\t                infinite = _options5.infinite,\n\t                ease = _options5.ease,\n\t                rewindSpeed = _options5.rewindSpeed,\n\t                rewindOnResize = _options5.rewindOnResize,\n\t                classNameActiveSlide = _options5.classNameActiveSlide;\n\t\n\t\n\t            slidesWidth = slideContainer.getBoundingClientRect().width || slideContainer.offsetWidth;\n\t            frameWidth = frame.getBoundingClientRect().width || frame.offsetWidth;\n\t\n\t            if (frameWidth === slidesWidth) {\n\t                slidesWidth = slides.reduce(function (previousValue, slide) {\n\t                    return previousValue + slide.getBoundingClientRect().width || slide.offsetWidth;\n\t                }, 0);\n\t            }\n\t\n\t            if (slidesWidth === 0) {\n\t                slidesWidth = slides.length / (typeof infinite === 'number' ? infinite : 1) * frameWidth;\n\t            }\n\t\n\t            if (rewindOnResize) {\n\t                index = 0;\n\t            } else {\n\t                ease = null;\n\t                rewindSpeed = 0;\n\t            }\n\t\n\t            if (infinite) {\n\t                translate(slides[index + infinite].offsetLeft * (options.direction === 'ltr' ? -1 : 1), 0, null);\n\t\n\t                index = index + infinite;\n\t                position.x = slides[index].offsetLeft * (options.direction === 'ltr' ? -1 : 1);\n\t            } else {\n\t                // position.x = slides[index].offsetLeft * (options.direction === 'ltr' ? -1 : 1);\n\t                position.x = 0;\n\t            }\n\t\n\t            if (classNameActiveSlide) {\n\t                setActiveElement(slice.call(slides), index);\n\t            }\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * slideTo: called on clickhandler\n\t         */\n\t        function slideTo(index) {\n\t            slide(index);\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * returnIndex function: called on clickhandler\n\t         */\n\t        function returnIndex() {\n\t            return index - options.infinite || 0;\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * prev function: called on clickhandler\n\t         */\n\t        function prev() {\n\t            slide(false, !(options.direction === 'ltr'));\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * next function: called on clickhandler\n\t         */\n\t        function next() {\n\t            slide(false, options.direction === 'ltr');\n\t        }\n\t\n\t        /**\n\t         * public\n\t         * destroy function: called to gracefully destroy the swiper instance\n\t         */\n\t        function destroy() {\n\t            dispatchSliderEvent('before', 'destroy');\n\t\n\t            // remove event listeners\n\t            frame.removeEventListener(prefixes.transitionEnd, onTransitionEnd);\n\t            frame.removeEventListener('touchstart', onTouchstart);\n\t            frame.removeEventListener('touchmove', onTouchmove);\n\t            frame.removeEventListener('touchend', onTouchend);\n\t            frame.removeEventListener('mousemove', onTouchmove);\n\t            frame.removeEventListener('mousedown', onTouchstart);\n\t            frame.removeEventListener('mouseup', onTouchend);\n\t            frame.removeEventListener('mouseleave', onTouchend);\n\t            frame.removeEventListener('click', onClick);\n\t\n\t            options.window.removeEventListener('resize', onResize);\n\t\n\t            if (prevCtrl) {\n\t                prevCtrl.removeEventListener('click', prev);\n\t            }\n\t\n\t            if (nextCtrl) {\n\t                nextCtrl.removeEventListener('click', next);\n\t            }\n\t\n\t            if (self.onAutoplayStart) {\n\t                window.clearInterval(self.onAutoplayStart);\n\t            }\n\t\n\t            // remove cloned slides if infinite is set\n\t            if (options.infinite) {\n\t                Array.apply(null, Array(options.infinite)).forEach(function () {\n\t                    slideContainer.removeChild(slideContainer.firstChild);\n\t                    slideContainer.removeChild(slideContainer.lastChild);\n\t                });\n\t            }\n\t\n\t            dispatchSliderEvent('after', 'destroy');\n\t        }\n\t\n\t        // event handling\n\t\n\t        var touchOffset = void 0;\n\t        var delta = void 0;\n\t        var isScrolling = void 0;\n\t\n\t        function onTransitionEnd() {\n\t            if (transitionEndCallback) {\n\t                transitionEndCallback();\n\t\n\t                transitionEndCallback = undefined;\n\t            }\n\t        }\n\t\n\t        function onTouchstart(event) {\n\t            var _options6 = options,\n\t                enableMouseEvents = _options6.enableMouseEvents;\n\t\n\t            var touches = event.touches ? event.touches[0] : event;\n\t\n\t            if (enableMouseEvents) {\n\t                frame.addEventListener('mousemove', onTouchmove);\n\t                frame.addEventListener('mouseup', onTouchend);\n\t                frame.addEventListener('mouseleave', onTouchend);\n\t            }\n\t\n\t            frame.addEventListener('touchmove', onTouchmove);\n\t            frame.addEventListener('touchend', onTouchend);\n\t\n\t            var pageX = touches.pageX,\n\t                pageY = touches.pageY;\n\t\n\t\n\t            touchOffset = {\n\t                x: pageX,\n\t                y: pageY,\n\t                time: Date.now()\n\t            };\n\t\n\t            isScrolling = undefined;\n\t\n\t            delta = {};\n\t\n\t            dispatchSliderEvent('on', 'touchstart', {\n\t                event: event\n\t            });\n\t        }\n\t\n\t        function onTouchmove(event) {\n\t            stopAutoplay();\n\t\n\t            var touches = event.touches ? event.touches[0] : event;\n\t            var pageX = touches.pageX,\n\t                pageY = touches.pageY;\n\t\n\t\n\t            delta = {\n\t                x: pageX - touchOffset.x,\n\t                y: pageY - touchOffset.y\n\t            };\n\t\n\t            if (typeof isScrolling === 'undefined') {\n\t                isScrolling = !!(isScrolling || Math.abs(delta.x) < Math.abs(delta.y));\n\t            }\n\t\n\t            if (!isScrolling && touchOffset) {\n\t                event.preventDefault();\n\t                translate(position.x + delta.x, 0, null);\n\t            }\n\t\n\t            // may be\n\t            dispatchSliderEvent('on', 'touchmove', {\n\t                event: event\n\t            });\n\t        }\n\t\n\t        function onTouchend(event) {\n\t            /**\n\t             * time between touchstart and touchend in milliseconds\n\t             * @duration {number}\n\t             */\n\t            var duration = touchOffset ? Date.now() - touchOffset.time : undefined;\n\t\n\t            /**\n\t             * is valid if:\n\t             *\n\t             * -> swipe attempt time is over 300 ms\n\t             * and\n\t             * -> swipe distance is greater than 25px\n\t             * or\n\t             * -> swipe distance is more then a third of the swipe area\n\t             *\n\t             * @isValidSlide {Boolean}\n\t             */\n\t            var isValid = Number(duration) < 300 && (Math.abs(delta.x) > 25 || Math.abs(delta.x) > frameWidth / 3);\n\t\n\t            /**\n\t             * is out of bounds if:\n\t             *\n\t             * -> index is 0 and delta x is greater than 0\n\t             * or\n\t             * -> index is the last slide and delta is smaller than 0\n\t             *\n\t             * @isOutOfBounds {Boolean}\n\t             */\n\t            var isOutOfBounds = !index && (options.direction === 'ltr' ? delta.x > 0 : delta.x <= 0) || index === slides.length - 1 && (options.direction === 'ltr' ? delta.x < 0 : delta.x >= 0);\n\t\n\t            var direction = options.direction === 'ltr' ? delta.x < 0 : delta.x >= 0;\n\t\n\t            if (!isScrolling) {\n\t                if (isValid && !isOutOfBounds) {\n\t                    slide(false, direction);\n\t                } else {\n\t                    translate(position.x, options.snapBackSpeed);\n\t                }\n\t            }\n\t\n\t            touchOffset = undefined;\n\t\n\t            /**\n\t             * remove eventlisteners after swipe attempt\n\t             */\n\t            frame.removeEventListener('touchmove', onTouchmove);\n\t            frame.removeEventListener('touchend', onTouchend);\n\t            frame.removeEventListener('mousemove', onTouchmove);\n\t            frame.removeEventListener('mouseup', onTouchend);\n\t            frame.removeEventListener('mouseleave', onTouchend);\n\t\n\t            startAutoplay();\n\t\n\t            dispatchSliderEvent('on', 'touchend', {\n\t                event: event\n\t            });\n\t        }\n\t\n\t        function onClick(event) {\n\t            if (delta.x) {\n\t                event.preventDefault();\n\t            }\n\t        }\n\t\n\t        function onResize(event) {\n\t            reset();\n\t\n\t            dispatchSliderEvent('on', 'resize', {\n\t                event: event\n\t            });\n\t        }\n\t\n\t        function startAutoplay() {\n\t            // set autoplay\n\t            if (options.autoplay) {\n\t                stopAutoplay();\n\t                self.onAutoplayStart = (0, _initAutoplay2.default)(slide, options);\n\t            }\n\t        }\n\t\n\t        function stopAutoplay() {\n\t            if (self.onAutoplayStart) {\n\t                window.clearInterval(self.onAutoplayStart);\n\t                self.onAutoplayStart = null;\n\t            }\n\t        }\n\t\n\t        // trigger initial setup\n\t        setup();\n\t\n\t        // expose public api\n\t        return {\n\t            setup: setup,\n\t            reset: reset,\n\t            slideTo: slideTo,\n\t            returnIndex: returnIndex,\n\t            prev: prev,\n\t            next: next,\n\t            destroy: destroy\n\t        };\n\t    };\n\t\n\t    window.swiper = swiper;\n\t})(window);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = detectPrefixes;\n\t\n\t/**\n\t * Detecting prefixes for saving time and bytes\n\t */\n\tfunction detectPrefixes() {\n\t    var transform = void 0;\n\t    var transition = void 0;\n\t    var transitionEnd = void 0;\n\t    var hasTranslate3d = void 0;\n\t\n\t    (function () {\n\t        var el = document.createElement('_');\n\t        var style = el.style;\n\t\n\t        var prop = void 0;\n\t\n\t        if (style[prop = 'webkitTransition'] === '') {\n\t            transitionEnd = 'webkitTransitionEnd';\n\t            transition = prop;\n\t        }\n\t\n\t        if (style[prop = 'transition'] === '') {\n\t            transitionEnd = 'transitionend';\n\t            transition = prop;\n\t        }\n\t\n\t        if (style[prop = 'webkitTransform'] === '') {\n\t            transform = prop;\n\t        }\n\t\n\t        if (style[prop = 'msTransform'] === '') {\n\t            transform = prop;\n\t        }\n\t\n\t        if (style[prop = 'transform'] === '') {\n\t            transform = prop;\n\t        }\n\t\n\t        document.body.insertBefore(el, null);\n\t        style[transform] = 'translate3d(0, 0, 0)';\n\t        hasTranslate3d = !!global.getComputedStyle(el).getPropertyValue(transform);\n\t        document.body.removeChild(el);\n\t    })();\n\t\n\t    return {\n\t        transform: transform,\n\t        transition: transition,\n\t        transitionEnd: transitionEnd,\n\t        hasTranslate3d: hasTranslate3d\n\t    };\n\t}\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = dispatchEvent;\n\t\n\tvar _customEvents = __webpack_require__(4);\n\t\n\tvar _customEvents2 = _interopRequireDefault(_customEvents);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * dispatch custom events\n\t *\n\t * @param  {element} el         slideshow element\n\t * @param  {string}  type       custom event name\n\t * @param  {object}  detail     custom detail information\n\t */\n\tfunction dispatchEvent(target, type, detail) {\n\t    var event = new _customEvents2.default(type, {\n\t        bubbles: true,\n\t        cancelable: true,\n\t        detail: detail\n\t    });\n\t\n\t    target.dispatchEvent(event);\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {'use strict';\n\t\n\t// var NativeCustomEvent = global.CustomEvent;\n\t\n\tfunction useNative() {\n\t    try {\n\t        var p = new global.CustomEvent('cat', { detail: { foo: 'bar' } });\n\t        return 'cat' === p.type && 'bar' === p.detail.foo;\n\t    } catch (e) {}\n\t    return false;\n\t}\n\t\n\t/**\n\t * Cross-browser `CustomEvent` constructor.\n\t *\n\t * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n\t *\n\t * @public\n\t */\n\t\n\tmodule.exports = useNative() ? global.CustomEvent : // IE >= 9\n\t'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent(type, params) {\n\t    var e = document.createEvent('CustomEvent');\n\t    if (params) {\n\t        e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n\t    } else {\n\t        e.initCustomEvent(type, false, false, void 0);\n\t    }\n\t    return e;\n\t} : // IE <= 8\n\tfunction CustomEvent(type, params) {\n\t    var e = document.createEventObject();\n\t    e.type = type;\n\t    if (params) {\n\t        e.bubbles = Boolean(params.bubbles);\n\t        e.cancelable = Boolean(params.cancelable);\n\t        e.detail = params.detail;\n\t    } else {\n\t        e.bubbles = false;\n\t        e.cancelable = false;\n\t        e.detail = void 0;\n\t    }\n\t    return e;\n\t};\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = initPagination;\n\t\n\t/**\n\t * handle pagination buttons for slider\n\t *\n\t * @param  {element} slider      slider element\n\t * @param  {element} slideTo     slide to frame function\n\t * @param  {element} options     slider options\n\t */\n\tfunction initPagination(slider, slideTo, options) {\n\t    var dotCount = slider.querySelectorAll('.' + options.classNameSlide).length;\n\t    var dotContainer = slider.querySelector('.' + options.classNameDotsContainer);\n\t    var dotListItem = document.createElement('li');\n\t    dotListItem.className = 'swiper-pagination-bullet';\n\t\n\t    function handleDotEvent(e) {\n\t        if (e.type === 'before.swiper.init') {}\n\t        if (e.type === 'after.swiper.init') {\n\t            for (var i = 0, len = dotCount; i < len; i++) {\n\t                var clone = dotListItem.cloneNode();\n\t                dotContainer.appendChild(clone);\n\t\n\t                dotContainer.childNodes[i].addEventListener('click', function (e) {\n\t                    slideTo(Array.prototype.indexOf.call(dotContainer.childNodes, e.target));\n\t                });\n\t            }\n\t            dotContainer.childNodes[0].classList.add('active');\n\t        }\n\t        if (e.type === 'after.swiper.slide') {\n\t            for (var _i = 0, _len = dotContainer.childNodes.length; _i < _len; _i++) {\n\t                dotContainer.childNodes[_i].classList.remove('active');\n\t            }\n\t            dotContainer.childNodes[e.detail.currentSlide].classList.add('active');\n\t        }\n\t        if (e.type === 'on.swiper.resize') {\n\t            for (var _i2 = 0, _len2 = dotContainer.childNodes.length; _i2 < _len2; _i2++) {\n\t                dotContainer.childNodes[_i2].classList.remove('active');\n\t            }\n\t            dotContainer.childNodes[0].classList.add('active');\n\t        }\n\t    };\n\t\n\t    slider.addEventListener('before.swiper.init', handleDotEvent);\n\t    slider.addEventListener('after.swiper.init', handleDotEvent);\n\t    slider.addEventListener('after.swiper.slide', handleDotEvent);\n\t    slider.addEventListener('on.swiper.resize', handleDotEvent);\n\t}\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.default = initAutoplay;\n\t\n\t/**\n\t * handle autoplay\n\t *\n\t * @param  {element} slideTo     slide to frame function\n\t * @param  {element} options     slider options\n\t */\n\tfunction initAutoplay(slide, options) {\n\t    var autoplayTime = typeof options.autoplay === 'number' ? options.autoplay : 3000;\n\t    var onAutoplayStart = window.setInterval(function () {\n\t        slide(false, true);\n\t    }, autoplayTime);\n\t\n\t    return onAutoplayStart;\n\t}\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = {\n\t  /**\n\t   * slides scrolled at once\n\t   * @slidesToScroll {Number}\n\t   */\n\t  slidesToScroll: 1,\n\t\n\t  /**\n\t   * no. of slides per view\n\t   * @slidesPerView {Number}\n\t   */\n\t  slidesPerView: 1,\n\t\n\t  /**\n\t   * time in milliseconds for the animation of a valid slide attempt\n\t   * @slideSpeed {Number}\n\t   */\n\t  slideSpeed: 300,\n\t\n\t  /**\n\t   * time in milliseconds for the animation of the rewind after the last slide\n\t   * @rewindSpeed {Number}\n\t   */\n\t  rewindSpeed: 600,\n\t\n\t  /**\n\t   * time for the snapBack of the slider if the slide attempt was not valid\n\t   * @snapBackSpeed {Number}\n\t   */\n\t  snapBackSpeed: 200,\n\t\n\t  /**\n\t   * Basic easing functions: https://developer.mozilla.org/de/docs/Web/CSS/transition-timing-function\n\t   * cubic bezier easing functions: http://easings.net/de\n\t   * @ease {String}\n\t   */\n\t  ease: 'ease',\n\t\n\t  /**\n\t   * if slider reached the last slide, with next click the slider goes back to the startindex.\n\t   * use infinite or rewind, not both\n\t   * @rewind {Boolean}\n\t   */\n\t  rewind: false,\n\t\n\t  /**\n\t   * number of visible slides or false\n\t   * use infinite or rewind, not both\n\t   * @infinite {number}\n\t   */\n\t  infinite: false,\n\t\n\t  /**\n\t   * class name for slider frame\n\t   * @classNameFrame {string}\n\t   */\n\t  classNameFrame: 'js_frame',\n\t\n\t  /**\n\t   * class name for slides container\n\t   * @classNameSlideContainer {string}\n\t   */\n\t  classNameSlideContainer: 'js_slides',\n\t\n\t  /**\n\t   * class name for slide\n\t   * @classNameSlide {string}\n\t   */\n\t  classNameSlide: 'js_slide',\n\t\n\t  /**\n\t   * class name for dots container\n\t   * @classNameDotsContainer {string}\n\t   */\n\t  classNameDotsContainer: 'js_dots',\n\t\n\t  /**\n\t   * class name for slider prev control\n\t   * @classNamePrevCtrl {string}\n\t   */\n\t  classNamePrevCtrl: 'js_prev',\n\t\n\t  /**\n\t   * class name for slider next control\n\t   * @classNameNextCtrl {string}\n\t   */\n\t  classNameNextCtrl: 'js_next',\n\t\n\t  /**\n\t   * class name for current active slide\n\t   * if emptyString then no class is set\n\t   * @classNameActiveSlide {string}\n\t   */\n\t  classNameActiveSlide: 'active',\n\t\n\t  /**\n\t   * class name for disabled prev / next control\n\t   * @classNameDisabled {string}\n\t   */\n\t  classNameDisabled: 'disabled',\n\t\n\t  /**\n\t   * enables mouse events for swiping on desktop devices\n\t   * @enableMouseEvents {boolean}\n\t   */\n\t  enableMouseEvents: true,\n\t\n\t  /**\n\t   * window instance\n\t   * @window {object}\n\t   */\n\t  window: window,\n\t\n\t  /**\n\t   * If false, slides swiper to the first slide on window resize.\n\t   * @rewindOnResize {boolean}\n\t   */\n\t  rewindOnResize: true,\n\t\n\t  /**\n\t   * autoplay slides\n\t   * time in ms\n\t   * @autoplay {number}\n\t   */\n\t  autoplay: false,\n\t\n\t  /**\n\t   * document direction\n\t   * @autoplay {string}\n\t   */\n\t  direction: 'ltr'\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// swiper.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9e319e4c6243d09b933f","\nimport detectPrefixes       from './utils/detect-prefixes.js';\nimport dispatchEvent        from './utils/dispatch-event.js';\nimport initPagination       from './utils/init-pagination.js';\nimport initAutoplay         from './utils/init-autoplay.js';\nimport defaults             from './defaults.js';\n\nconst slice = Array.prototype.slice;\n\n// 'use strict';\n(function (window) {\n  let swiper = function (slider, opts) {\n    let self = this;\n\n    let position;\n    let slidesWidth;\n    let frameWidth;\n    let slides;\n\n    /**\n     * slider DOM elements\n     */\n    let frame;\n    let slideContainer;\n    let prevCtrl;\n    let nextCtrl;\n    let prefixes;\n    let transitionEndCallback;\n    let dotsContainer;\n\n    let index   = 0;\n    let options = {};\n\n    self.onAutoplayStart;\n\n    /**\n     * if object is jQuery convert to native DOM element\n     */\n    if (typeof jQuery !== 'undefined' && slider instanceof jQuery) {\n        slider = slider[0];\n    }\n\n    /**\n     * private\n     * set active class to element which is the current slide\n     */\n    function setActiveElement (slides, currentIndex) {\n        const {classNameActiveSlide} = options;\n\n        slides.forEach((element, index) => {\n            if (element.classList.contains(classNameActiveSlide)) {\n                element.classList.remove(classNameActiveSlide);\n            }\n        });\n\n        if (slides[currentIndex]) {\n            slides[currentIndex].classList.add(classNameActiveSlide);\n        }\n\n        if (prevCtrl) {\n            (currentIndex === 0) ? prevCtrl.classList.add(options.classNameDisabled) : prevCtrl.classList.remove(options.classNameDisabled);\n        }\n\n        if (nextCtrl && !options.rewind) {\n            ((currentIndex + 1) === slides.length) ? nextCtrl.classList.add(options.classNameDisabled) : nextCtrl.classList.remove(options.classNameDisabled);\n        }\n    }\n\n    /**\n     * private\n     * setupSlidesPerView: function to setup no. of slides per view\n     *\n     * @param  {array} slideArray\n     * @return {array} array of updated slideContainer elements\n     */\n    function setupSlidesPerView (slideArray) {\n        const {\n            slidesPerView,\n            classNameSlide\n        } = options;\n\n        slideArray.forEach(function (element) {\n            element.style.width = (100 / slidesPerView) + '%';\n        });\n\n        slideContainer.addEventListener(prefixes.transitionEnd, onTransitionEnd);\n\n        return slice.call(slideContainer.children);\n    }\n\n    // /**\n    //  * private\n    //  * setupInfinite: function to setup if infinite is set\n    //  *\n    //  * @param  {array} slideArray\n    //  * @return {array} array of updated slideContainer elements\n    //  */\n    // function setupInfinite (slideArray) {\n    //     const { infinite } = options;\n    //     console.log('setupInfinite: ', slideArray);\n    //     console.log('infinite: ', infinite);\n\n    //     const front = slideArray.slice(0, infinite);\n    //     const back  = slideArray.slice(slideArray.length - infinite, slideArray.length);\n\n    //     front.forEach(function (element) {\n    //         const cloned = element.cloneNode(true);\n\n    //         slideContainer.appendChild(cloned);\n    //     });\n\n    //     back.reverse()\n    //         .forEach(function (element) {\n    //             const cloned = element.cloneNode(true);\n\n    //             slideContainer.insertBefore(cloned, slideContainer.firstChild);\n    //         });\n\n    //     slideContainer.addEventListener(prefixes.transitionEnd, onTransitionEnd);\n\n    //     return slice.call(slideContainer.children);\n    // }\n\n    /**\n     * [dispatchSliderEvent description]\n     * @return {[type]} [description]\n     */\n    function dispatchSliderEvent (phase, type, detail) {\n        dispatchEvent(slider, `${phase}.swiper.${type}`, detail);\n    }\n\n    /**\n     * translates to a given position in a given time in milliseconds\n     *\n     * @to        {number} number in pixels where to translate to\n     * @duration  {number} time in milliseconds for the transistion\n     * @ease      {string} easing css property\n     */\n    function translate (to, duration, ease) {\n        const style = slideContainer && slideContainer.style;\n\n        if (style) {\n            style[prefixes.transition + 'TimingFunction'] = ease;\n            style[prefixes.transition + 'Duration'] = duration + 'ms';\n\n            if (prefixes.hasTranslate3d) {\n                style[prefixes.transform] = 'translate3d(' + to + 'px, 0, 0)';\n            } else {\n                style[prefixes.transform] = 'translate(' + to + 'px, 0)';\n            }\n        }\n\n        // Fire events while sliding\n        let count = 5;\n        let eventInterval = window.setInterval(() => {\n            dispatchSliderEvent('while', 'sliding');\n            count--;\n            if (count === 0) {\n                window.clearInterval(eventInterval);\n            }\n        }, duration / 5);\n    }\n\n    /**\n     * slidefunction called by prev, next & touchend\n     *\n     * determine nextIndex and slide to next postion\n     * under restrictions of the defined options\n     *\n     * @direction  {boolean}\n     */\n    function slide (nextIndex, direction) {\n        const {\n            slideSpeed,\n            slidesToScroll,\n            infinite,\n            rewind,\n            rewindSpeed,\n            ease,\n            classNameActiveSlide\n        } = options;\n\n        let duration = slideSpeed;\n\n        slider.style.direction = slider.style.direction || options.direction;\n\n        const nextSlide = direction ? index + 1 : index - 1;\n        const maxOffset = Math.round(slidesWidth - frameWidth);\n\n        dispatchSliderEvent('before', 'slide', {\n            index,\n            nextSlide\n        });\n\n        if (typeof nextIndex !== 'number') {\n            if (direction) {\n                nextIndex = index + slidesToScroll;\n            } else {\n                nextIndex = index - slidesToScroll;\n            }\n        }\n\n        nextIndex = Math.min(Math.max(nextIndex, 0), slides.length - 1);\n\n        if (infinite && direction === undefined) {\n            nextIndex += infinite;\n        }\n\n        // let nextOffset = Math.min(Math.max(slides[nextIndex].offsetLeft * -1, maxOffset * -1), 0);\n        let nextOffset = Math.min(Math.max(slides[nextIndex].offsetLeft * (options.direction === 'ltr' ? -1 : 1), maxOffset * -1), 0);\n        nextOffset = nextOffset * (options.direction === 'ltr' ? 1 : -1);\n\n        if (rewind && Math.abs(position.x) === maxOffset && direction) {\n            nextOffset = 0;\n            nextIndex = 0;\n            duration = rewindSpeed;\n        }\n\n        /**\n         * translate to the nextOffset by a defined duration and ease function\n         */\n        translate(nextOffset, duration, ease);\n\n        /**\n         * update the position with the next position\n         */\n        position.x = nextOffset;\n\n        /**\n         * update the index with the nextIndex only if\n         * the offset of the nextIndex is in the range of the maxOffset\n         */\n        if (slides[nextIndex].offsetLeft <= maxOffset) {\n            index = nextIndex;\n        }\n\n        if (infinite && (nextIndex === slides.length - infinite || nextIndex === 0)) {\n            if (direction) {\n                index = infinite;\n            }\n\n            if (!direction) {\n                index = slides.length - (infinite * 2);\n            }\n\n            position.x = slides[index].offsetLeft * -1;\n\n            transitionEndCallback = function () {\n                translate(slides[index].offsetLeft * -1, 0, undefined);\n            };\n        }\n\n        if (classNameActiveSlide) {\n            setActiveElement(slice.call(slides), index);\n        }\n\n        dispatchSliderEvent('after', 'slide', {\n            currentSlide: index\n        });\n    }\n\n    /**\n     * public\n     * setup function\n     */\n    function setup () {\n        dispatchSliderEvent('before', 'init');\n\n        prefixes = detectPrefixes();\n        options = {...defaults, ...opts};\n\n        const {\n            classNameFrame,\n            classNameSlideContainer,\n            classNameDotsContainer,\n            classNamePrevCtrl,\n            classNameNextCtrl,\n            enableMouseEvents,\n            classNameActiveSlide\n        } = options;\n\n        frame = slider.getElementsByClassName(classNameFrame)[0];\n        slideContainer = frame.getElementsByClassName(classNameSlideContainer)[0];\n        prevCtrl = slider.getElementsByClassName(classNamePrevCtrl)[0];\n        nextCtrl = slider.getElementsByClassName(classNameNextCtrl)[0];\n        dotsContainer = slider.getElementsByClassName(classNameDotsContainer)[0];\n\n        // set swiper direction\n        options.direction = document.body.style.direction || options.direction;\n\n        // set pagination\n        if (dotsContainer) {\n            initPagination(slider, slideTo, options);\n        }\n\n        position = {\n            x: slideContainer.offsetLeft,\n            y: slideContainer.offsetTop\n        };\n\n        if (options.slidesPerView) {\n            slides = setupSlidesPerView(slice.call(slideContainer.getElementsByClassName(defaults.classNameSlide)));\n        } else {\n            slides = slice.call(slideContainer.getElementsByClassName(defaults.classNameSlide));\n        }\n\n        slides.forEach(function (slide) {\n            slide.addEventListener('mouseenter', function () { stopAutoplay(); });\n            slide.addEventListener('mouseleave', function () { startAutoplay(); });\n        });\n\n        // if (options.infinite) {\n        //     slides = setupInfinite(slice.call(slideContainer.getElementsByClassName(defaults.classNameSlide)));\n        // } else {\n        //     slides = slice.call(slideContainer.getElementsByClassName(defaults.classNameSlide));\n        // }\n\n        reset();\n\n        if (classNameActiveSlide) {\n            setActiveElement(slides, index);\n        }\n\n        // start autoplay\n        startAutoplay();\n\n        // set prev and next controls\n        if (prevCtrl && nextCtrl) {\n            prevCtrl.addEventListener('click', prev);\n            nextCtrl.addEventListener('click', next);\n        }\n\n        frame.addEventListener('touchstart', onTouchstart, { passive: true });\n\n        if (enableMouseEvents) {\n            frame.addEventListener('mousedown', onTouchstart);\n            frame.addEventListener('click', onClick);\n        }\n\n        options.window.addEventListener('resize', onResize);\n\n        // check if swiper instance is not present, destroy\n        slider.addEventListener('before.swiper.slide', function () {\n            if (!document.body.contains(slider)) { destroy(); }\n        });\n\n        dispatchSliderEvent('after', 'init');\n    }\n\n    /**\n     * public\n     * reset function: called on resize\n     */\n    function reset () {\n        var { infinite, ease, rewindSpeed, rewindOnResize, classNameActiveSlide } = options;\n\n        slidesWidth = slideContainer.getBoundingClientRect().width || slideContainer.offsetWidth;\n        frameWidth = frame.getBoundingClientRect().width || frame.offsetWidth;\n\n        if (frameWidth === slidesWidth) {\n            slidesWidth = slides.reduce(function (previousValue, slide) {\n                return previousValue + slide.getBoundingClientRect().width || slide.offsetWidth;\n            }, 0);\n        }\n\n        if (slidesWidth === 0) {\n            slidesWidth = (slides.length / (typeof infinite === 'number' ? infinite : 1)) * frameWidth;\n        }\n\n        if (rewindOnResize) {\n            index = 0;\n        } else {\n            ease = null;\n            rewindSpeed = 0;\n        }\n\n        if (infinite) {\n            translate(slides[index + infinite].offsetLeft * (options.direction === 'ltr' ? -1 : 1), 0, null);\n\n            index = index + infinite;\n            position.x = slides[index].offsetLeft * (options.direction === 'ltr' ? -1 : 1);\n        } else {\n            // position.x = slides[index].offsetLeft * (options.direction === 'ltr' ? -1 : 1);\n            position.x = 0;\n        }\n\n        if (classNameActiveSlide) {\n            setActiveElement(slice.call(slides), index);\n        }\n    }\n\n    /**\n     * public\n     * slideTo: called on clickhandler\n     */\n    function slideTo (index) {\n        slide(index);\n    }\n\n    /**\n     * public\n     * returnIndex function: called on clickhandler\n     */\n    function returnIndex () {\n        return index - options.infinite || 0;\n    }\n\n    /**\n     * public\n     * prev function: called on clickhandler\n     */\n    function prev () {\n        slide(false, !(options.direction === 'ltr'));\n    }\n\n    /**\n     * public\n     * next function: called on clickhandler\n     */\n    function next () {\n        slide(false, options.direction === 'ltr');\n    }\n\n    /**\n     * public\n     * destroy function: called to gracefully destroy the swiper instance\n     */\n    function destroy () {\n        dispatchSliderEvent('before', 'destroy');\n\n        // remove event listeners\n        frame.removeEventListener(prefixes.transitionEnd, onTransitionEnd);\n        frame.removeEventListener('touchstart', onTouchstart);\n        frame.removeEventListener('touchmove', onTouchmove);\n        frame.removeEventListener('touchend', onTouchend);\n        frame.removeEventListener('mousemove', onTouchmove);\n        frame.removeEventListener('mousedown', onTouchstart);\n        frame.removeEventListener('mouseup', onTouchend);\n        frame.removeEventListener('mouseleave', onTouchend);\n        frame.removeEventListener('click', onClick);\n\n        options.window.removeEventListener('resize', onResize);\n\n        if (prevCtrl) {\n            prevCtrl.removeEventListener('click', prev);\n        }\n\n        if (nextCtrl) {\n            nextCtrl.removeEventListener('click', next);\n        }\n\n        if (self.onAutoplayStart) {\n            window.clearInterval(self.onAutoplayStart);\n        }\n\n        // remove cloned slides if infinite is set\n        if (options.infinite) {\n            Array.apply(null, Array(options.infinite)).forEach(function () {\n                slideContainer.removeChild(slideContainer.firstChild);\n                slideContainer.removeChild(slideContainer.lastChild);\n            });\n        }\n\n        dispatchSliderEvent('after', 'destroy');\n    }\n\n    // event handling\n\n    let touchOffset;\n    let delta;\n    let isScrolling;\n\n    function onTransitionEnd () {\n        if (transitionEndCallback) {\n            transitionEndCallback();\n\n            transitionEndCallback = undefined;\n        }\n    }\n\n    function onTouchstart (event) {\n        const {enableMouseEvents} = options;\n        const touches = event.touches ? event.touches[0] : event;\n\n        if (enableMouseEvents) {\n            frame.addEventListener('mousemove', onTouchmove);\n            frame.addEventListener('mouseup', onTouchend);\n            frame.addEventListener('mouseleave', onTouchend);\n        }\n\n        frame.addEventListener('touchmove', onTouchmove);\n        frame.addEventListener('touchend', onTouchend);\n\n        const {pageX, pageY} = touches;\n\n        touchOffset = {\n            x: pageX,\n            y: pageY,\n            time: Date.now()\n        };\n\n        isScrolling = undefined;\n\n        delta = {};\n\n        dispatchSliderEvent('on', 'touchstart', {\n            event\n        });\n    }\n\n    function onTouchmove (event) {\n        stopAutoplay();\n\n        const touches = event.touches ? event.touches[0] : event;\n        const {pageX, pageY} = touches;\n\n        delta = {\n            x: pageX - touchOffset.x,\n            y: pageY - touchOffset.y\n        };\n\n        if (typeof isScrolling === 'undefined') {\n            isScrolling = !!(isScrolling || Math.abs(delta.x) < Math.abs(delta.y));\n        }\n\n        if (!isScrolling && touchOffset) {\n            event.preventDefault();\n            translate(position.x + delta.x, 0, null);\n        }\n\n        // may be\n        dispatchSliderEvent('on', 'touchmove', {\n            event\n        });\n    }\n\n    function onTouchend (event) {\n        /**\n         * time between touchstart and touchend in milliseconds\n         * @duration {number}\n         */\n        const duration = touchOffset ? Date.now() - touchOffset.time : undefined;\n\n        /**\n         * is valid if:\n         *\n         * -> swipe attempt time is over 300 ms\n         * and\n         * -> swipe distance is greater than 25px\n         * or\n         * -> swipe distance is more then a third of the swipe area\n         *\n         * @isValidSlide {Boolean}\n         */\n        const isValid = Number(duration) < 300 &&\n            (Math.abs(delta.x) > 25 ||\n            Math.abs(delta.x) > frameWidth / 3);\n\n        /**\n         * is out of bounds if:\n         *\n         * -> index is 0 and delta x is greater than 0\n         * or\n         * -> index is the last slide and delta is smaller than 0\n         *\n         * @isOutOfBounds {Boolean}\n         */\n        const isOutOfBounds = !index && ((options.direction === 'ltr') ? delta.x > 0 : delta.x <= 0) ||\n            index === slides.length - 1 && ((options.direction === 'ltr') ? delta.x < 0 : delta.x >= 0);\n\n        const direction = (options.direction === 'ltr') ? delta.x < 0 : delta.x >= 0;\n\n        if (!isScrolling) {\n            if (isValid && !isOutOfBounds) {\n                slide(false, direction);\n            } else {\n                translate(position.x, options.snapBackSpeed);\n            }\n        }\n\n        touchOffset = undefined;\n\n        /**\n         * remove eventlisteners after swipe attempt\n         */\n        frame.removeEventListener('touchmove', onTouchmove);\n        frame.removeEventListener('touchend', onTouchend);\n        frame.removeEventListener('mousemove', onTouchmove);\n        frame.removeEventListener('mouseup', onTouchend);\n        frame.removeEventListener('mouseleave', onTouchend);\n\n        startAutoplay();\n\n        dispatchSliderEvent('on', 'touchend', {\n            event\n        });\n    }\n\n    function onClick (event) {\n        if (delta.x) {\n            event.preventDefault();\n        }\n    }\n\n    function onResize (event) {\n        reset();\n\n        dispatchSliderEvent('on', 'resize', {\n            event\n        });\n    }\n\n    function startAutoplay () {\n        // set autoplay\n        if (options.autoplay) {\n            stopAutoplay();\n            self.onAutoplayStart = initAutoplay(slide, options);\n        }\n    }\n\n    function stopAutoplay () {\n        if (self.onAutoplayStart) {\n            window.clearInterval(self.onAutoplayStart);\n            self.onAutoplayStart = null;\n        }\n    }\n\n    // trigger initial setup\n    setup();\n\n    // expose public api\n    return {\n        setup,\n        reset,\n        slideTo,\n        returnIndex,\n        prev,\n        next,\n        destroy\n    };\n  };\n\n  window.swiper = swiper;\n\n})(window);\n\n\n// WEBPACK FOOTER //\n// ./src/swiper.js","\n/**\n * Detecting prefixes for saving time and bytes\n */\nexport default function detectPrefixes () {\n    let transform;\n    let transition;\n    let transitionEnd;\n    let hasTranslate3d;\n\n    (function () {\n        let el = document.createElement('_');\n        let style = el.style;\n\n        let prop;\n\n        if (style[prop = 'webkitTransition'] === '') {\n            transitionEnd = 'webkitTransitionEnd';\n            transition = prop;\n        }\n\n        if (style[prop = 'transition'] === '') {\n            transitionEnd = 'transitionend';\n            transition = prop;\n        }\n\n        if (style[prop = 'webkitTransform'] === '') {\n            transform = prop;\n        }\n\n        if (style[prop = 'msTransform'] === '') {\n            transform = prop;\n        }\n\n        if (style[prop = 'transform'] === '') {\n            transform = prop;\n        }\n\n        document.body.insertBefore(el, null);\n        style[transform] = 'translate3d(0, 0, 0)';\n        hasTranslate3d = !!global.getComputedStyle(el).getPropertyValue(transform);\n        document.body.removeChild(el);\n    }());\n\n    return {\n        transform,\n        transition,\n        transitionEnd,\n        hasTranslate3d\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/detect-prefixes.js","\nimport CustomEvent from './custom-events';\n\n/**\n * dispatch custom events\n *\n * @param  {element} el         slideshow element\n * @param  {string}  type       custom event name\n * @param  {object}  detail     custom detail information\n */\nexport default function dispatchEvent (target, type, detail) {\n    let event = new CustomEvent(\n        type,\n        {\n            bubbles: true,\n            cancelable: true,\n            detail: detail\n        }\n    );\n\n    target.dispatchEvent(event);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/dispatch-event.js","\n// var NativeCustomEvent = global.CustomEvent;\n\nfunction useNative () {\n    try {\n        var p = new global.CustomEvent('cat', { detail: { foo: 'bar' } });\n        return 'cat' === p.type && 'bar' === p.detail.foo;\n    } catch (e) {\n    }\n    return false;\n}\n\n/**\n * Cross-browser `CustomEvent` constructor.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent.CustomEvent\n *\n * @public\n */\n\nmodule.exports = useNative() ? global.CustomEvent\n: // IE >= 9\n'undefined' !== typeof document && 'function' === typeof document.createEvent ? function CustomEvent (type, params) {\n    var e = document.createEvent('CustomEvent');\n    if (params) {\n        e.initCustomEvent(type, params.bubbles, params.cancelable, params.detail);\n    } else {\n        e.initCustomEvent(type, false, false, void 0);\n    }\n    return e;\n}\n: // IE <= 8\nfunction CustomEvent (type, params) {\n    var e = document.createEventObject();\n    e.type = type;\n    if (params) {\n        e.bubbles = Boolean(params.bubbles);\n        e.cancelable = Boolean(params.cancelable);\n        e.detail = params.detail;\n    } else {\n        e.bubbles = false;\n        e.cancelable = false;\n        e.detail = void 0;\n    }\n    return e;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/custom-events.js","\n/**\n * handle pagination buttons for slider\n *\n * @param  {element} slider      slider element\n * @param  {element} slideTo     slide to frame function\n * @param  {element} options     slider options\n */\nexport default function initPagination (slider, slideTo, options) {\n    let dotCount         = slider.querySelectorAll('.' + options.classNameSlide).length;\n    let dotContainer     = slider.querySelector('.' + options.classNameDotsContainer);\n    let dotListItem      = document.createElement('li');\n    dotListItem.className = 'swiper-pagination-bullet';\n\n    function handleDotEvent (e) {\n        if (e.type === 'before.swiper.init') { }\n        if (e.type === 'after.swiper.init') {\n            for (let i = 0, len = dotCount; i < len; i++) {\n                let clone = dotListItem.cloneNode();\n                dotContainer.appendChild(clone);\n\n                dotContainer.childNodes[i].addEventListener('click', function(e) {\n                    slideTo(Array.prototype.indexOf.call(dotContainer.childNodes, e.target));\n                });\n            }\n            dotContainer.childNodes[0].classList.add('active');\n        }\n        if (e.type === 'after.swiper.slide') {\n            for (let i = 0, len = dotContainer.childNodes.length; i < len; i++) {\n                dotContainer.childNodes[i].classList.remove('active');\n            }\n            dotContainer.childNodes[e.detail.currentSlide].classList.add('active');\n        }\n        if (e.type === 'on.swiper.resize') {\n            for (let i = 0, len = dotContainer.childNodes.length; i < len; i++) {\n                dotContainer.childNodes[i].classList.remove('active');\n            }\n            dotContainer.childNodes[0].classList.add('active');\n        }\n    };\n\n    slider.addEventListener('before.swiper.init', handleDotEvent);\n    slider.addEventListener('after.swiper.init', handleDotEvent);\n    slider.addEventListener('after.swiper.slide', handleDotEvent);\n    slider.addEventListener('on.swiper.resize', handleDotEvent);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/init-pagination.js","\n/**\n * handle autoplay\n *\n * @param  {element} slideTo     slide to frame function\n * @param  {element} options     slider options\n */\nexport default function initAutoplay (slide, options) {\n    let autoplayTime = (typeof options.autoplay === 'number') ? options.autoplay : 3000;\n    let onAutoplayStart = window.setInterval(() => {\n        slide(false, true);\n    }, autoplayTime);\n\n    return onAutoplayStart;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/init-autoplay.js","export default {\n    /**\n     * slides scrolled at once\n     * @slidesToScroll {Number}\n     */\n    slidesToScroll: 1,\n\n    /**\n     * no. of slides per view\n     * @slidesPerView {Number}\n     */\n    slidesPerView: 1,\n\n    /**\n     * time in milliseconds for the animation of a valid slide attempt\n     * @slideSpeed {Number}\n     */\n    slideSpeed: 300,\n\n    /**\n     * time in milliseconds for the animation of the rewind after the last slide\n     * @rewindSpeed {Number}\n     */\n    rewindSpeed: 600,\n\n    /**\n     * time for the snapBack of the slider if the slide attempt was not valid\n     * @snapBackSpeed {Number}\n     */\n    snapBackSpeed: 200,\n\n    /**\n     * Basic easing functions: https://developer.mozilla.org/de/docs/Web/CSS/transition-timing-function\n     * cubic bezier easing functions: http://easings.net/de\n     * @ease {String}\n     */\n    ease: 'ease',\n\n    /**\n     * if slider reached the last slide, with next click the slider goes back to the startindex.\n     * use infinite or rewind, not both\n     * @rewind {Boolean}\n     */\n    rewind: false,\n\n    /**\n     * number of visible slides or false\n     * use infinite or rewind, not both\n     * @infinite {number}\n     */\n    infinite: false,\n\n    /**\n     * class name for slider frame\n     * @classNameFrame {string}\n     */\n    classNameFrame: 'js_frame',\n\n    /**\n     * class name for slides container\n     * @classNameSlideContainer {string}\n     */\n    classNameSlideContainer: 'js_slides',\n\n    /**\n     * class name for slide\n     * @classNameSlide {string}\n     */\n    classNameSlide: 'js_slide',\n\n    /**\n     * class name for dots container\n     * @classNameDotsContainer {string}\n     */\n    classNameDotsContainer: 'js_dots',\n\n    /**\n     * class name for slider prev control\n     * @classNamePrevCtrl {string}\n     */\n    classNamePrevCtrl: 'js_prev',\n\n    /**\n     * class name for slider next control\n     * @classNameNextCtrl {string}\n     */\n    classNameNextCtrl: 'js_next',\n\n    /**\n     * class name for current active slide\n     * if emptyString then no class is set\n     * @classNameActiveSlide {string}\n     */\n    classNameActiveSlide: 'active',\n\n    /**\n     * class name for disabled prev / next control\n     * @classNameDisabled {string}\n     */\n    classNameDisabled: 'disabled',\n\n    /**\n     * enables mouse events for swiping on desktop devices\n     * @enableMouseEvents {boolean}\n     */\n    enableMouseEvents: true,\n\n    /**\n     * window instance\n     * @window {object}\n     */\n    window: window,\n\n    /**\n     * If false, slides swiper to the first slide on window resize.\n     * @rewindOnResize {boolean}\n     */\n    rewindOnResize: true,\n\n    /**\n     * autoplay slides\n     * time in ms\n     * @autoplay {number}\n     */\n    autoplay: false,\n\n    /**\n     * document direction\n     * @autoplay {string}\n     */\n    direction: 'ltr'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/defaults.js"],"sourceRoot":""}